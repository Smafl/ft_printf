At first I made a state machine for this project. Here we can see the states and tranisitions between them:
@startuml
state text
state format
state flag
state width
state precision
state type
state undef_precision

text --> format: %
text --> text: char (except %)

format --> flag: flags
format --> width: integer != 0
format --> undef_precision: dot
format --> type: types
format --> text: char (rest)

flag --> format: %
flag --> flag: flags
flag --> width: integer != 0
flag --> undef_precision: dot
flag --> type: types
flag --> text: char (rest)

width --> format: %
width --> undef_precision: dot
width --> type: types
width --> text: char (rest)
width --> width: 0-9

undef_precision --> format: %
undef_precision --> type: types
undef_precision --> text: char (rest)
undef_precision --> precision: '-'
undef_precision --> precision: 0-9

precision --> precision: 0-9
precision --> format: %
precision --> type: types
precision --> text: char (rest)

type --> format: %
type --> text: char (rest)
@enduml

Then I made a simple function for parsing a given string and printing it as "state-symbol-state". For exsample:
parse_str("a%10dx");
output would be:
text
a
text
%
format
1
width
0
width
d
type
x
text

Then I change my function that now it stores all parts in variables and prints in next format:
parse_str("hello world %-022dsmafl");
output would be:
text: "hello world "
format:
	flag: minus, zero
	width: 22
	type: d
text: "smafl"

